package sortingUI;

import titlesUI.TitleFrameApp;
import java.awt.event.ItemEvent;
import java.util.ArrayList;

/**
 *
 * @author Kelvin Bonilla
 */
public class SortingSituationsFrame extends javax.swing.JFrame
{
    private javax.swing.JFrame previousWindow;
    private ArrayList<String> sortChoices;
    private ArrayList<int[]> indicesChosen; // index 0 is numElements, index 1 is order, for each int[] within the ArrayList
    private int lastIndex = -1; // index of most recently added int[]
    /**
     * Creates new form SortingSituationsFrame
     */
    public SortingSituationsFrame(javax.swing.JFrame previousWindow, java.util.ArrayList<String> sortChoices) {
        initComponents();
        this.previousWindow = previousWindow;
        this.sortChoices = sortChoices;
        indicesChosen = new ArrayList<>();
        fillComboBox(sortChoices);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numElementsBtnGroup = new javax.swing.ButtonGroup();
        sortStatusBtnGroup = new javax.swing.ButtonGroup();
        sortsComboBox = new javax.swing.JComboBox<>();
        sortsChosenLbl = new javax.swing.JLabel();
        numElementsLbl = new javax.swing.JLabel();
        hunElementsRadioBtn = new javax.swing.JRadioButton();
        thouElementsRadioBtn = new javax.swing.JRadioButton();
        tenThouElementsRadioBtn = new javax.swing.JRadioButton();
        sortStatusLbl = new javax.swing.JLabel();
        inOrderRadioBtn = new javax.swing.JRadioButton();
        reverseOrderRadioBtn = new javax.swing.JRadioButton();
        randomOrderRadioBtn = new javax.swing.JRadioButton();
        saveBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        nxtBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Sorting Situations");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                windowClosingEvt(evt);
            }
        });

        sortsComboBox.setToolTipText("A list of all of the sorts chosen.");
        sortsComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxItemStateChangedEvt(evt);
            }
        });

        sortsChosenLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        sortsChosenLbl.setText("Sort Chosen:");
        sortsChosenLbl.setToolTipText("The name of the sort and it's implementation.");

        numElementsLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        numElementsLbl.setText("Number of Elements:");
        numElementsLbl.setToolTipText("The number of elements the implementation structure will have.");

        numElementsBtnGroup.add(hunElementsRadioBtn);
        hunElementsRadioBtn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        hunElementsRadioBtn.setText("100");
        hunElementsRadioBtn.setToolTipText("Structure will have 100 elements.");

        numElementsBtnGroup.add(thouElementsRadioBtn);
        thouElementsRadioBtn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        thouElementsRadioBtn.setText("1,000");
        thouElementsRadioBtn.setToolTipText("Structure will have 1,000 elements.");

        numElementsBtnGroup.add(tenThouElementsRadioBtn);
        tenThouElementsRadioBtn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tenThouElementsRadioBtn.setText("10,000");
        tenThouElementsRadioBtn.setToolTipText("Structure will have 10,000 elements.");

        sortStatusLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        sortStatusLbl.setText("Sort Status:");
        sortStatusLbl.setToolTipText("Whether the structure the sort will be applied on is sorted in some way.");

        sortStatusBtnGroup.add(inOrderRadioBtn);
        inOrderRadioBtn.setText("In-Order");
        inOrderRadioBtn.setToolTipText("The structure will be pre-sorted in ascending order.");

        sortStatusBtnGroup.add(reverseOrderRadioBtn);
        reverseOrderRadioBtn.setText("Reverse-Order");
        reverseOrderRadioBtn.setToolTipText("The structure will be pre-sorted in descending order.");

        sortStatusBtnGroup.add(randomOrderRadioBtn);
        randomOrderRadioBtn.setText("Random-Order");
        randomOrderRadioBtn.setToolTipText("The structure will have values in a random order.");

        saveBtn.setText("Save Config");
        saveBtn.setToolTipText("Saves the current configuration of this Sort Chosen.");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.setToolTipText("Closes this window and brings you back to the \"Sorting Menu\" window.");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        nxtBtn.setText("Next");
        nxtBtn.setToolTipText("Brings you to the next window, which is the \"Output\" window.");
        nxtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nxtBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numElementsLbl)
                            .addComponent(sortsChosenLbl)
                            .addComponent(sortStatusLbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(randomOrderRadioBtn)
                            .addComponent(reverseOrderRadioBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inOrderRadioBtn)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hunElementsRadioBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(thouElementsRadioBtn)))
                                .addGap(18, 18, 18)
                                .addComponent(tenThouElementsRadioBtn))
                            .addComponent(sortsComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(saveBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(nxtBtn)
                        .addGap(18, 18, 18)
                        .addComponent(backBtn)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortsChosenLbl))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numElementsLbl)
                    .addComponent(hunElementsRadioBtn)
                    .addComponent(thouElementsRadioBtn)
                    .addComponent(tenThouElementsRadioBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortStatusLbl)
                    .addComponent(inOrderRadioBtn))
                .addGap(18, 18, 18)
                .addComponent(reverseOrderRadioBtn)
                .addGap(18, 18, 18)
                .addComponent(randomOrderRadioBtn)
                .addGap(18, 18, 18)
                .addComponent(saveBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nxtBtn)
                    .addComponent(backBtn))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void fillComboBox(ArrayList<String> theSorts)
    {
        for(int i = 0; i < theSorts.size(); i++)
            sortsComboBox.addItem(theSorts.get(i));
        
    }
    
    private int getRadioButtonIndex(String btnGroup)
    {
        if(btnGroup.equalsIgnoreCase("numElements"))
        {
            if(hunElementsRadioBtn.isSelected())
                return 0;
            else if(thouElementsRadioBtn.isSelected())
                return 1;
            else if(tenThouElementsRadioBtn.isSelected())
                return 2;
            else
                return -1;
        }
        else if(btnGroup.equalsIgnoreCase("sortStatus"))
        {
            if(inOrderRadioBtn.isSelected())
                return 0;
            else if(reverseOrderRadioBtn.isSelected())
                return 1;
            else if(randomOrderRadioBtn.isSelected())
                return 2;
            else
                return -1;
        }
        else
            return -1;
    }
    
    private void selectRadioButton(String btnGroup, int index)
    {
        if(btnGroup.equalsIgnoreCase("numElements"))
        {
            switch(index)
            {
                case 0:
                    hunElementsRadioBtn.setSelected(true);
                    break;
                case 1:
                    thouElementsRadioBtn.setSelected(true);
                    break;
                case 2:
                    tenThouElementsRadioBtn.setSelected(true);
                    break;
                default:
                    numElementsBtnGroup.clearSelection();
            }               
        }
        else if(btnGroup.equalsIgnoreCase("sortStatus"))
        {
            switch(index)
            {
                case 0:
                    inOrderRadioBtn.setSelected(true);
                    break;
                case 1:
                    reverseOrderRadioBtn.setSelected(true);
                    break;
                case 2:
                    randomOrderRadioBtn.setSelected(true);
                    break;
                default:
                    sortStatusBtnGroup.clearSelection();
                
            }
        }
    }
    
    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        int sortSelected = sortsComboBox.getSelectedIndex();
        int numElIndex = getRadioButtonIndex("numElements");
        int orderIndex = getRadioButtonIndex("sortStatus");
        boolean hasSelection = (sortSelected != -1);
        if(hasSelection)
        {
            hasSelection = (numElIndex != -1);
            if(hasSelection)
            {
                hasSelection = (orderIndex != -1);                
                if(hasSelection)
                {
                    indicesChosen.add(sortSelected, new int[]{numElIndex,orderIndex});
                    lastIndex++;
                    javax.swing.JOptionPane.showMessageDialog(this, "Information has been saved.", "Save Confirmation.", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    javax.swing.JOptionPane.showMessageDialog(this, "Error! Sort status hasn't been selected.", "Selection Error.", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
            else
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Error! Number of elements hasn't been selected.", "Selection Error.", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Error! No sort has been selected.", "Selection Error.", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void comboBoxItemStateChangedEvt(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxItemStateChangedEvt
        if(evt.getStateChange() == ItemEvent.SELECTED)
        {
            int index = sortsComboBox.getSelectedIndex();
            if(index > lastIndex)
            {
                numElementsBtnGroup.clearSelection();
                sortStatusBtnGroup.clearSelection();
            }
            else if(index <= lastIndex && index != -1)
            {
                selectRadioButton("numElements", indicesChosen.get(index)[0]);
                selectRadioButton("sortStatus", indicesChosen.get(index)[1]);
            }
        }
        else if(evt.getStateChange() == ItemEvent.DESELECTED && sortsComboBox.getSelectedIndex() == -1)
        {
            numElementsBtnGroup.clearSelection();
            sortStatusBtnGroup.clearSelection();
        }

    }//GEN-LAST:event_comboBoxItemStateChangedEvt

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        TitleFrameApp.displayFrame(previousWindow, this);
        dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void windowClosingEvt(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowClosingEvt
        backBtn.doClick();
    }//GEN-LAST:event_windowClosingEvt

    private void nxtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nxtBtnActionPerformed
        for(int i = 0; i < sortsComboBox.getItemCount(); i++)
        {
            try
            {
                indicesChosen.get(i);
            }
            catch(IndexOutOfBoundsException e)
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Error! Not all sorts have had information stored.", "Saving Error.", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        TitleFrameApp.displayFrame(new OutputSortResultsFrame(this, sortChoices, indicesChosen), this);
        
    }//GEN-LAST:event_nxtBtnActionPerformed
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JRadioButton hunElementsRadioBtn;
    private javax.swing.JRadioButton inOrderRadioBtn;
    private javax.swing.ButtonGroup numElementsBtnGroup;
    private javax.swing.JLabel numElementsLbl;
    private javax.swing.JButton nxtBtn;
    private javax.swing.JRadioButton randomOrderRadioBtn;
    private javax.swing.JRadioButton reverseOrderRadioBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.ButtonGroup sortStatusBtnGroup;
    private javax.swing.JLabel sortStatusLbl;
    private javax.swing.JLabel sortsChosenLbl;
    private javax.swing.JComboBox<String> sortsComboBox;
    private javax.swing.JRadioButton tenThouElementsRadioBtn;
    private javax.swing.JRadioButton thouElementsRadioBtn;
    // End of variables declaration//GEN-END:variables
}
