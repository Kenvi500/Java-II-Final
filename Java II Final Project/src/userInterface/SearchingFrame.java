package userInterface;

/**
 *
 * @author Kelvin Bonilla
 */
public class SearchingFrame extends javax.swing.JFrame
{

    private MainMenuFrame mainMenu;
    private String arrayName;
    private String searchType;
    private sourceCode.access.SAHIAccess toBeSearched;
    
    /**
     * Creates new form SearchingFrame
     */
    public SearchingFrame(MainMenuFrame mainMenu, String arrayName, String searchType, sourceCode.access.SAHIAccess toBeSearched) {
        initComponents();
        this.mainMenu = mainMenu;
        this.arrayName = arrayName;
        this.searchType = searchType;
        this.toBeSearched = toBeSearched;
        initialDisplay(arrayName, searchType);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectedLbl = new javax.swing.JLabel();
        searchTypeLbl = new javax.swing.JLabel();
        serchForLbl = new javax.swing.JLabel();
        selectedTxtField = new javax.swing.JTextField();
        searchTypeTxtField = new javax.swing.JTextField();
        searchForTxtField = new javax.swing.JTextField();
        atIndexLbl = new javax.swing.JLabel();
        atIndexTxtField = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();
        submitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Searching For A Value");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                windowClosingEvt(evt);
            }
        });

        selectedLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        selectedLbl.setText("Selected:");
        selectedLbl.setToolTipText("The array that was selected");

        searchTypeLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        searchTypeLbl.setText("Search Type:");
        searchTypeLbl.setToolTipText("The type of search to be done");

        serchForLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        serchForLbl.setText("Search For:");
        serchForLbl.setToolTipText("The value to search for");

        selectedTxtField.setEditable(false);
        selectedTxtField.setToolTipText("Displaying the name of the array selected previously");

        searchTypeTxtField.setEditable(false);
        searchTypeTxtField.setToolTipText("Displaying the search type selected previously");

        searchForTxtField.setToolTipText("The field where the value to search for is to be entered");
        searchForTxtField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldFocusGained(evt);
            }
        });
        searchForTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keyPressedEvt(evt);
            }
        });

        atIndexLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        atIndexLbl.setText("At Index:");
        atIndexLbl.setToolTipText("The index the value searched for is located at");

        atIndexTxtField.setEditable(false);
        atIndexTxtField.setToolTipText("The index location of the value searched for within the array. This index will be -1 if the value wasn't found");

        backBtn.setText("Back");
        backBtn.setToolTipText("Closes this window and brings you bakc to the Main Menu");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        submitBtn.setText("Submit");
        submitBtn.setToolTipText("Submits the Search For value to be used when searching through the Selected array using the Search Type");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectedLbl)
                    .addComponent(searchTypeLbl)
                    .addComponent(serchForLbl)
                    .addComponent(atIndexLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(atIndexTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(submitBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(backBtn))
                        .addComponent(selectedTxtField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(searchTypeTxtField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(searchForTxtField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectedLbl)
                    .addComponent(selectedTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTypeLbl)
                    .addComponent(searchTypeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serchForLbl)
                    .addComponent(searchForTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atIndexLbl)
                    .addComponent(atIndexTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn)
                    .addComponent(submitBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private int search(int searchFor, String searchType, sourceCode.access.SAHIAccess toBeSearched)
    {
        if(searchType.equalsIgnoreCase("Binary Search"))
            return toBeSearched.indexOf(searchFor);
        else
            return toBeSearched.indexOf(searchFor, sourceCode.access.SAHIAccess.SearchType.LINEAR);
    }
    private void initialDisplay(String arrayName, String searchtype)
    {
        selectedTxtField.setText(arrayName);
        searchTypeTxtField.setText(searchtype);
    }
    private void displayResults(String searchResults)
    {
        atIndexTxtField.setText(searchResults);
    }
    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        try
        {
            int searchFor = Integer.parseInt(searchForTxtField.getText());
            String searchResults = Integer.toString(search(searchFor, searchType, toBeSearched));
            displayResults(searchResults);
        }
        catch(NumberFormatException e)
        {
            javax.swing.JOptionPane.showMessageDialog(this,"Error! Search For field must contain an integer", "Entry Error", javax.swing.JOptionPane.ERROR_MESSAGE);            
            return;
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        TitleFrameApp.displayFrame(mainMenu, this);
        dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void windowClosingEvt(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowClosingEvt
        backBtn.doClick();
    }//GEN-LAST:event_windowClosingEvt

    private void keyPressedEvt(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyPressedEvt
        if(evt.getExtendedKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
            submitBtn.doClick();
    }//GEN-LAST:event_keyPressedEvt

    private void txtFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldFocusGained
        if (evt.getComponent() instanceof javax.swing.JTextField)
        {
            javax.swing.JTextField tf = (javax.swing.JTextField) evt.getComponent();
            tf.selectAll();
        }
    }//GEN-LAST:event_txtFieldFocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel atIndexLbl;
    private javax.swing.JTextField atIndexTxtField;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField searchForTxtField;
    private javax.swing.JLabel searchTypeLbl;
    private javax.swing.JTextField searchTypeTxtField;
    private javax.swing.JLabel selectedLbl;
    private javax.swing.JTextField selectedTxtField;
    private javax.swing.JLabel serchForLbl;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables
}
